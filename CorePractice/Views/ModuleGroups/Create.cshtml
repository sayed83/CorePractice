@model CorePractice.Models.ModuleGroup

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
</head>

@using (Html.BeginForm("Create", "ModuleGroups", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @*@Html.AntiForgeryToken()*@

    <div class="container" style="max-width: 700px;">
        <div class="py-7 text-center">
            <h2>Module Group Entry</h2>
            <p class="lead"></p>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {
            <input type="hidden" id="ModuleGroupId" name="ModuleGroupId" value="@Model.ModuleGroupId" />
        }
        else
        {
            <input type="hidden" id="comid" name="comid" value="" />
        }


        <div id="modalbodyfahad" class="row card p-4">
            <div class="col-md-12 order-md-1">
                <h4 class="mb-3">Module Group Information</h4>
                <form class="needs-validation card p-4" novalidate>
                    <div class="row">
                        <br>
                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.ModuleGroupName)
                            @Html.EditorFor(model => model.ModuleGroupName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModuleGroupName, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-6 mb-3">

                            @Html.LabelFor(model => model.ModuleGroupCaption)

                            @Html.EditorFor(model => model.ModuleGroupCaption, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModuleGroupCaption, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.ModuleId, "Module")

                            @Html.DropDownList("ModuleId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-6 mb-3">

                            @Html.LabelFor(model => model.SLNO)

                            @Html.EditorFor(model => model.SLNO, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SLNO, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="d-block mx-auto">
                        <div class="col-md-4 offset-md-2">
                            @Html.HiddenFor(model => model.ModuleGroupImage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.ImageExtension, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.ModuleGroupImage)
                            @if (Model == null)
                            {
                            }
                            else
                            {
                                if (Model.ModuleGroupImage == null)
                                {
                                    <img src="@Url.Content("uploads/"+0 + ".png")" class="img-thumbnail" multiple />
                                }
                                else
                                {
                                    <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ModuleGroupImage))" class="img-thumbnail">
                                }
                            }
                            @Html.ValidationMessageFor(model => model.ModuleGroupImage, "", new { @class = "text-danger" })
                            <input type="file" class="image-upload" name="file" id="myFile" />
                            <br />
                            <img src="" height="200" id='image_X' alt="Image preview...">
                            <div class="images">
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />


                    <table>

                        <tr>

                            <td>
                                @if (ViewBag.Title == "Create")
                                {
                                    <input type="submit" value="Create" class="btn btn-primary btn-block" />
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block" />
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <button class="btn btn-danger btn-lg btn-block" type="button" onclick="ModuleGroup_delete()">Delete</button>
                                }

                            </td>
                            <td>
                                @Html.ActionLink("Back", "Index", "ModuleGroups", null, new { @class = "btn btn-info btn-block" })

                            </td>

                        </tr>
                    </table>
                </form>
            </div>
        </div>
    </div>
}


@section Scripts{
    <script type="text/javascript">

     function ModuleGroup_delete() {

            var ModuleGroupId = $("#ModuleGroupId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("Delete", "ModuleGroups")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: ModuleGroupId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "ModuleGroups")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
    }


    $(document).ready(function () {

        $('#myFile').bind('change', function () {

            //this.files[0].size gets the size of your file.

            //  alert(this.files[0].size);

            var a = this.files[0].size;

            if (a >= 6000000) {
                alert('File size is too large!! \n 50 KB maximum');
                $('#myFile').val('');
                document.getElementById('image_X').src = ''

            }
            else {
                //alert('its ok');
                previewFile();

            }
        });

        function previewFile() {
            var preview = document.querySelector('#image_X'); //selects the query named img
            var file = document.querySelector('input[type=file]').files[0]; //sames as here

            var reader = new FileReader();


            reader.onloadend = function () {
                preview.src = reader.result;
            }

            if (file) {
                reader.readAsDataURL(file); //reads the data as a URL
            } else {
                preview.src = "";
            }
        }

        })

    </script>
}

@*<div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="ModuleGroupName" class="control-label"></label>
                    <input asp-for="ModuleGroupName" class="form-control" />
                    <span asp-validation-for="ModuleGroupName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleGroupCaption" class="control-label"></label>
                    <input asp-for="ModuleGroupCaption" class="form-control" />
                    <span asp-validation-for="ModuleGroupCaption" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleGroupImage" class="control-label"></label>
                    <input asp-for="ModuleGroupImage" class="form-control" />
                    <span asp-validation-for="ModuleGroupImage" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImagePath" class="control-label"></label>
                    <input asp-for="ImagePath" class="form-control" />
                    <span asp-validation-for="ImagePath" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImageExtension" class="control-label"></label>
                    <input asp-for="ImageExtension" class="form-control" />
                    <span asp-validation-for="ImageExtension" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SLNO" class="control-label"></label>
                    <input asp-for="SLNO" class="form-control" />
                    <span asp-validation-for="SLNO" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleId" class="control-label"></label>
                    <select asp-for="ModuleId" class ="form-control" asp-items="ViewBag.ModuleId"></select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>*@

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
