@model CorePractice.Models.Module

@{

}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    @*<link rel="icon" href="/docs/4.0/assets/img/favicons/favicon.ico">*@

    <link rel="canonical" href="https://getbootstrap.com/docs/4.0/examples/checkout/">

    <!-- Bootstrap core CSS -->
    @*<link href="../../dist/css/bootstrap.min.css" rel="stylesheet">*@

    <!-- Custom styles for this template -->
    @*<link href="form-validation.css" rel="stylesheet">*@

</head>

<body>
    @using (Html.BeginForm("Create", "Modules", FormMethod.Post, new { enctype = "multipart/form-data" }))

    {
        @*@Html.AntiForgeryToken()*@
        <h2>Create</h2>

        <div class="container" style="max-width:700px;">

            <div class="py-7 text-center">
                <img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
                <h2>Module Entry</h2>
                <p class="lead"></p>
            </div>
            <div id="modalbodyrakin" class="row card p-4">
                <div class="col-md-12 order-md-1">
                    <h4 class="mb-3">Module Information</h4>
                    <form class="needs-validation card p-4" novalidate>
                        <div class="row">

                            <br>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @if (Model != null)
                            {

                                <input type="hidden" id="ModuleId" name="ModuleId" value="@Model.ModuleId" />
                            }
                            else
                            {
                                <input type="hidden" id="comid" name="comid" value="" />
                            }

                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.ModuleCode, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.ModuleCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModuleCode, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-12 mb-3">
                                @Html.LabelFor(model => model.ModuleCaption, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.ModuleCaption, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModuleCaption, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-12 mb-3">
                                @Html.LabelFor(model => model.ModuleDescription, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })

                            </div>


                        </div>
                        <div class="row">


                            <div class="col-md-10 mb-3">
                                @Html.LabelFor(model => model.ModuleLink, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ModuleLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModuleLink, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-2 mb-3">
                                @Html.LabelFor(model => model.SLNO, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.SLNO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SLNO, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <br>

                        <div class="d-block mx-auto">
                            <div class="col-md-4 offset-md-2">
                                @Html.HiddenFor(model => model.ModuleImage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.ModuleImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.ModuleImageExtension, new { htmlAttributes = new { @class = "form-control" } })


                                @Html.LabelFor(model => model.ModuleImage)


                                @if (Model == null)
                                {
                                }
                                else
                                {


                                    if (Model.ModuleImage == null)
                                    {

                                        <img src="@Url.Content("uploads/" + 0 + ".png")" class="img-thumbnail" multiple />
                                    }
                                    else
                                    {
                                        <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ModuleImage))" class="img-thumbnail">
                                    }
                                }

                                @Html.ValidationMessageFor(model => model.ModuleImage, "", new { @class = "text-danger" })
                                <input type="file" class="image-upload" name="file" id="myFile" />
                                <br />
                                <img src="" height="200" id='image_X' alt="Image preview...">
                                <div class="images">



                                </div>
                            </div>
                        </div>
                        <table>
                            <tr>
                                <td>
                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Create" class="btn btn-primary btn-block" />

                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block" />
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-lg btn-block" type="button" onclick="Modules_delete()">Delete</button>
                                    }

                                </td>
                                <td>
                                    @Html.ActionLink("Back", "Index", "Modules", null, new { @class = "btn btn-info btn-block" })

                                </td>

                            </tr>
                        </table>
                    </form>

                </div>
            </div>

        </div>
    }

    @section Scripts{
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script type="text/javascript">
         function Modules_delete() {
            var ModuleId = $("#ModuleId").val();
            $.ajax({

                url: '@Url.Action("Delete", "Modules")',
                data: JSON.stringify({ id: ModuleId }), //use id here
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "Modules")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
        }


        $(document).ready(function () {

            $('#myFile').bind('change', function () {
                var a = this.files[0].size;
                if (a >= 6000000) {
                    alert('File size is too large!! \n 50 KB maximum');
                    $('#myFile').val('');
                    document.getElementById('image_X').src = ''
                }
                else {
                    previewFile();
                }
            });

            function previewFile() {
                var preview = document.querySelector('#image_X'); //selects the query named img
                var file = document.querySelector('input[type=file]').files[0]; //sames as here

                var reader = new FileReader();


                reader.onloadend = function () {
                    preview.src = reader.result;
                }

                if (file) {
                    reader.readAsDataURL(file); //reads the data as a URL
                } else {
                    preview.src = "";
                }
            }
        })
        </script>
    }
</body>



@*<div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="ModuleCode" class="control-label"></label>
                    <input asp-for="ModuleCode" class="form-control" />
                    <span asp-validation-for="ModuleCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleName" class="control-label"></label>
                    <input asp-for="ModuleName" class="form-control" />
                    <span asp-validation-for="ModuleName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleCaption" class="control-label"></label>
                    <input asp-for="ModuleCaption" class="form-control" />
                    <span asp-validation-for="ModuleCaption" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleDescription" class="control-label"></label>
                    <input asp-for="ModuleDescription" class="form-control" />
                    <span asp-validation-for="ModuleDescription" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleLink" class="control-label"></label>
                    <input asp-for="ModuleLink" class="form-control" />
                    <span asp-validation-for="ModuleLink" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleImage" class="control-label"></label>
                    <input asp-for="ModuleImage" class="form-control" />
                    <span asp-validation-for="ModuleImage" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleImagePath" class="control-label"></label>
                    <input asp-for="ModuleImagePath" class="form-control" />
                    <span asp-validation-for="ModuleImagePath" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ModuleImageExtension" class="control-label"></label>
                    <input asp-for="ModuleImageExtension" class="form-control" />
                    <span asp-validation-for="ModuleImageExtension" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsInActive" class="control-label"></label>
                    <input asp-for="IsInActive" class="form-control" />
                    <span asp-validation-for="IsInActive" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SLNO" class="control-label"></label>
                    <input asp-for="SLNO" class="form-control" />
                    <span asp-validation-for="SLNO" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>*@

